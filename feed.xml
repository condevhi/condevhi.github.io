<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design, Refactor, Reflect &amp;amp; Repeat</title>
    <description>Software development is an iterative process of designing, problem solving, and reflection.  As good citizens, our communities should also share what we have learned.
</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 08 Feb 2016 17:00:53 -1000</pubDate>
    <lastBuildDate>Mon, 08 Feb 2016 17:00:53 -1000</lastBuildDate>
    <generator>Jekyll v3.0.0</generator>
    
      <item>
        <title>Lessons Learned from Upgrading Redmine</title>
        <description>&lt;p&gt;Upgrading Redmine from &lt;code&gt;1.x&lt;/code&gt; to &lt;code&gt;3.x&lt;/code&gt; was a lot smoother than one would imagine.  Kudos to the Redmine team for making that possible.&lt;/p&gt;

&lt;p&gt;However, there were some hiccups (mainly due to our own customizations) so I’ll capture them here for posterity.&lt;/p&gt;

&lt;h2 id=&quot;unknown-admin&quot;&gt;Unknown Admin&lt;/h2&gt;
&lt;p&gt;Our Redmine admin account’s password has long since been lost, but luckily there is a way to reset that password:&lt;br /&gt;
&lt;a href=&quot;http://www.redmine.org/projects/redmine/wiki/FAQ#Reset-password-lost-without-admin-redmine-account-but-with-admin-redmine-database-account&quot;&gt;Redmine FAQ#Reset-password…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reason this is necessary is because we migrated our CAS plugin from &lt;a href=&quot;https://github.com/Emergya/redmine_cas&quot;&gt;Emergya’s redmine_cas&lt;/a&gt; to &lt;a href=&quot;https://github.com/ninech/redmine_cas&quot;&gt;nine.ch ‘s redmine_cas&lt;/a&gt;.  This name conflict led to quite a bit of confusion.  I am still not 100% sure that the original plugin was &lt;a href=&quot;https://github.com/Emergya&quot;&gt;Emergya’s&lt;/a&gt; version.&lt;/p&gt;

&lt;h2 id=&quot;cookie-overflow&quot;&gt;Cookie Overflow&lt;/h2&gt;
&lt;p&gt;Certain users experienced &lt;code&gt;500&lt;/code&gt; errors because they were approved for too many applications.  This is because the plugin tries to shove all of the CAS attributes into the session, including every single CAS group the user belongs to.  By default, Redmine/Rails uses cookies for sessions.&lt;/p&gt;

&lt;p&gt;To resolve the cookie overflow error, configure Redmine/Rails to use database sessions:&lt;br /&gt;
In &lt;code&gt;config/application.rb&lt;/code&gt;, replace:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;session_store&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:cookie_store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;with&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;session_store&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:active_record_store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and then integrating the &lt;a href=&quot;https://github.com/rails/activerecord-session_store&quot;&gt;Active Record Session&lt;/a&gt; gem.&lt;/p&gt;

&lt;h2 id=&quot;disappearing-files&quot;&gt;Disappearing Files&lt;/h2&gt;
&lt;p&gt;Redmine stores file attachments on the filesystem under the &lt;a href=&quot;https://github.com/redmine/redmine/tree/2a6637ed2ef05ad0770bb76094c67f230d2341f6/files&quot;&gt;&lt;code&gt;/{install directory}/files/&lt;/code&gt; folder&lt;/a&gt; by &lt;a href=&quot;https://github.com/redmine/redmine/blob/2a6637ed2ef05ad0770bb76094c67f230d2341f6/config/configuration.yml.example#L69-L76&quot;&gt;default&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So we have to ensure those files persist across deployments.&lt;/p&gt;

&lt;h2 id=&quot;mismatched-jruby&quot;&gt;Mismatched JRuby&lt;/h2&gt;
&lt;p&gt;During the deployment, we encountered an issue where bundler could not find the gems that were in the deploy package.  The reason was because the application was using a different JRuby version than the operating system.&lt;/p&gt;

&lt;p&gt;The operating system’s JRuby was used to install the gems using this command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;jruby -S bundle install --deployment&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The command left a &lt;code&gt;.bundle/config&lt;/code&gt; file that was unintentionally picked up by the application.&lt;/p&gt;

&lt;p&gt;The OS JRuby installed the gems to it’s location, &lt;code&gt;vendor/gems/jruby-x.x&lt;/code&gt; while the application was looking for the gems in it’s own location, &lt;code&gt;vendor/gems/jruby-y.y&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The reason the application used a different version of JRuby, was because warbler packaged that version with the application.  We will need to wait for warbler to be upgraded before both the application and OS JRuby can match.&lt;/p&gt;

&lt;h2 id=&quot;database-mirage&quot;&gt;Database Mirage&lt;/h2&gt;
&lt;p&gt;In our staging environment, I was trying to check the database migrations with:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;jruby -S bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rake db:migrate:status&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;but was getting a misleading access denied error.&lt;/p&gt;

&lt;p&gt;It turns out that the &lt;code&gt;rake&lt;/code&gt; task was trying to hit the development database, I had to run this instead:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;RAILS_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production
jruby -S bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rake db:migrate:status&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;new-secrets&quot;&gt;New Secrets&lt;/h2&gt;
&lt;p&gt;Just a note that Rails is now expecting all secret tokens to be located in &lt;code&gt;config/secrets.yml&lt;/code&gt;.  There were no issues involving this during the upgrade.&lt;/p&gt;

&lt;h2 id=&quot;no-rails-console&quot;&gt;No Rails Console&lt;/h2&gt;
&lt;p&gt;Just another note.  I still am unable to get &lt;code&gt;rails console&lt;/code&gt; to work on both staging and production.&lt;/p&gt;

</description>
        <pubDate>Wed, 03 Feb 2016 15:02:02 -1000</pubDate>
        <link>/redmine/upgrade/2016/02/03/lessons-learned-from-upgrading-redmine.html</link>
        <guid isPermaLink="true">/redmine/upgrade/2016/02/03/lessons-learned-from-upgrading-redmine.html</guid>
        
        
        <category>redmine</category>
        
        <category>upgrade</category>
        
      </item>
    
      <item>
        <title>Log Rotation for Rails</title>
        <description>&lt;p&gt;Leveraing system utilities on a unix operating system simplifies log rotation for Rails applications. There are only a few configurations necessary to get this up and running.&lt;/p&gt;

&lt;p&gt;The first step is to create a file in /etc/logrotate.d directory. Giving it the name of your application is a good idea. Then, open the file in vim or nano and add the following.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;/home/deploy/APPNAME/shared/log/*.log {
  daily
  missingok
  rotate 365
  compress
  delaycompress
  notifempty
  copytruncate
  dateext
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Options:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;daily&lt;/strong&gt; - Rotate the log files each day. Alternatively, weekly or monthly could be used&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;missingok&lt;/strong&gt; - Ignore if the log file does not exist&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;rotate 365&lt;/strong&gt; - Only keep 365 days of logs around&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;compress&lt;/strong&gt; - GZip the log file on rotation&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;delaycompress&lt;/strong&gt; - Rotate the file one day, then compress it the next day. This minimize interference with Rails server.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;notifempty&lt;/strong&gt; - Don’t rotate the file if the logs are empty&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;copytruncate&lt;/strong&gt; - Copy the log file then empty it. This insures that the log file Rails is writing to always exists because the file being modified does not change. If this is not done, you will need to add a post action to restart the Rails server.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;dateext&lt;/strong&gt; - Append the date at the end of the file name instead of an the default incrementing number. (production.log-20151118). If you are testing log rotation, you will need to disable this option in order to generate multiple logrotation files on the same day.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;logrotate&lt;/code&gt; runs daily via cron by default. View &lt;code&gt;/etc/cron.daily/logrotate&lt;/code&gt; for more information.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Nov 2015 11:04:40 -1000</pubDate>
        <link>/sysadmin/maintenance/2015/11/19/log-rotation-for-rails.html</link>
        <guid isPermaLink="true">/sysadmin/maintenance/2015/11/19/log-rotation-for-rails.html</guid>
        
        
        <category>sysadmin</category>
        
        <category>maintenance</category>
        
      </item>
    
      <item>
        <title>Another Day</title>
        <description>&lt;h2 id=&quot;take-another-look&quot;&gt;Take another look&lt;/h2&gt;

&lt;p&gt;Be patient and take your time&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Nov 2015 21:56:55 -1000</pubDate>
        <link>/next/thingy/2015/11/16/another-day.html</link>
        <guid isPermaLink="true">/next/thingy/2015/11/16/another-day.html</guid>
        
        
        <category>next</category>
        
        <category>thingy</category>
        
      </item>
    
      <item>
        <title>New Day</title>
        <description>&lt;h2 id=&quot;its-a-new-day&quot;&gt;It’s a New Day&lt;/h2&gt;

&lt;p&gt;Let’s begin…&lt;/p&gt;

</description>
        <pubDate>Mon, 16 Nov 2015 14:04:34 -1000</pubDate>
        <link>/begin/2015/11/16/new-day.html</link>
        <guid isPermaLink="true">/begin/2015/11/16/new-day.html</guid>
        
        
        <category>begin</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 16 Nov 2015 14:00:02 -1000</pubDate>
        <link>/jekyll/update/2015/11/16/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">/jekyll/update/2015/11/16/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
